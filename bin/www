#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('app:www');
const error = require('debug')('app:error');
const http = require('http');


/**
 * Get port from environment and store in Express.
 */

// Normalize a port into a number, string, or false.
function normalizePort(val) {
    const port = parseInt(val, 10);

    if (isNaN(port)) {
        return val; // named pipe
    }

    if (port >= 0) {
        return port; // port number
    }

    return false;
}

const port = normalizePort(process.env.PORT || '3001');
app.set('port', port);



/**
 * Create HTTP server.
 */

const server = http.createServer(app);

server.listen(port);

server.on('error', (err) => {
    if (err.syscall !== 'listen') {
        throw err;
    }

    const bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (err.code) {
        case 'EACCES':
            error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw err;
    }
});

server.on('listening', () => {
    const addr = server.address();
    const bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
});
